namespace SymbolInMatrix
{
    using System;

    public class Program
    {
        public static void Main()
        {
            int matrixSize = int.Parse(Console.ReadLine());

            int[,] sqiuareMatrix = new int[matrixSize, matrixSize];

            for (int i = 0; i < matrixSize; i++)
            {
                char[] rowInput = Console.ReadLine()
                    .ToCharArray();

                for (int j = 0; j < rowInput.Length; j++)
                {
                    sqiuareMatrix[i, j] = rowInput[j];
                }
            }

            char symbol = char.Parse(Console.ReadLine());
            int symbolCode = symbol;

            bool symbolFound = false;

            int foundSymbolIndexRow = 0;
            int foundSymbolIndexColl = 0;

            for (int rows = 0; rows < sqiuareMatrix.GetLength(0); rows++)
            {
                for (int colls = 0; colls < sqiuareMatrix.GetLength(1); colls++)
                {
                    int codeOfCurrentSymbolInMatrix = sqiuareMatrix[rows, colls];

                    if (codeOfCurrentSymbolInMatrix == symbolCode)
                    {
                        symbolFound = true;

                        foundSymbolIndexRow = rows;
                        foundSymbolIndexColl = colls;

                        break;
                    }

                    if (symbolFound)
                    {
                        break;
                    }
                }
            }

            if (symbolFound)
            {
                Console.WriteLine($"({foundSymbolIndexRow}, {foundSymbolIndexColl})");
            }
            else
            {
                Console.WriteLine($"{symbol} does not occur in the matrix");
            }
        }
    }
}

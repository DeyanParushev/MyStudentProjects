namespace BalancedParenthesis
{
    using System;
    using System.Collections.Generic;

    class Program
    {
        static void Main(string[] args)
        {
            string inputExpression = Console.ReadLine();

            Stack<char> rightSide = new Stack<char>();

            bool expressionIsSymetric = true;

            if (inputExpression != null)
            {
                for (int i = 0; i < inputExpression.Length; i++)
                {
                    char symbol = inputExpression[i];

                    switch (symbol)
                    {
                        case '(':

                            rightSide.Push(symbol);
                            break;

                        case '{':

                            rightSide.Push(symbol);
                            break;

                        case '[':

                            rightSide.Push(symbol);
                            break;

                        case ')':

                            if (rightSide.Count > 0)
                            {
                                if (rightSide.Pop() != '(')
                                {
                                    expressionIsSymetric = false;
                                }
                            }
                            else
                            {
                                expressionIsSymetric = false;
                            }

                            break;

                        case ']':

                            if (rightSide.Count > 0)
                            {
                                if (rightSide.Pop() != '[')
                                {
                                    expressionIsSymetric = false;
                                }
                            }
                            else
                            {
                                expressionIsSymetric = false;
                            }

                            break;

                        case '}':

                            if (rightSide.Count > 0)
                            {
                                if (rightSide.Pop() != '{')
                                {
                                    expressionIsSymetric = false;
                                }
                            }
                            else
                            {
                                expressionIsSymetric = false;
                            }

                            break;
                    }

                    if (!expressionIsSymetric)
                    {
                        break;
                    }
                }
            }

            if (expressionIsSymetric)
            {
                Console.WriteLine("YES");
            }
            else
            {
                Console.WriteLine("NO");
            }
        }
    }
}
